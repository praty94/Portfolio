{"version":3,"sources":["Assets/bg.jpg","Context/AppContext.js","Components/HeaderNav/HeaderNav.jsx","Components/Tabs/AboutMeTab/AboutMeTab.jsx","Components/Tabs/ProjectsTab/Projects/ProjectCards.jsx","Components/Tabs/ProjectsTab/ProjectsTab.jsx","Components/Tabs/TechnologiesTab/TechnologiesTab.jsx","Components/Tabs/Tabs.jsx","Components/Home/Home.jsx","Theme/ThemeHelper.js","Components/AppShell/AppShell.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppContext","createContext","AppContextProvider","props","useState","theme","localStorage","getItem","appState","setAppState","Provider","value","children","useStyles","makeStyles","root","flexGrow","title","textAlign","fontSize","breakpoints","down","transparent","background","boxShadow","headerButton","display","ButtonAppBar","classes","className","AppBar","position","Toolbar","style","fontWeight","Button","AboutMeTab","maxWidth","height","transform","cursor","transition","media","content","description","padding","margin","borderRadius","expandedDescription","openLink","url","sameTab","window","location","open","ProjectCard","str","isDescExpanded","setIsDescExpanded","Card","CardHeader","subheader","subtitle","action","demoDisabled","IconButton","aria-label","onClick","demoLink","CardMedia","image","img","CardContent","Paper","elevation","clsx","Typography","variant","color","component","length","substr","Link","CardActions","actions","sourceDisabled","startIcon","sourceLink","ProjectTab","Grid","container","justify","alignItems","spacing","ProjectsData","data","map","item","index","key","ProjectCards","TechnologiesTab","TabPanel","other","role","hidden","id","aria-labelledby","Box","p","DisabledTabs","React","setValue","Fragment","square","Tabs","indicatorColor","onChange","event","newValue","centered","Tab","label","ProjectsTab","headerNav","backgroundImage","backgroundSize","borderTop","textTransform","socialButton","socialContainer","tabContainer","marginTop","Home","size","disabled","xs","sm","themeColors","light","primary","secondary","dark","themeHelper","createMuiTheme","palette","main","type","AppShell","useContext","useEffect","document","body","backgroundColor","ThemeProvider","ThemeHelper","App","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a6539bca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.ab8a7189.jpg\";","import React,{useState,createContext} from 'react';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppContextProvider = (props) => {\r\n    const theme = \"dark\";//default app theme\r\n    const [appState, setAppState] = useState({\r\n        theme: localStorage.getItem('app.theme') || theme\r\n    });\r\n    return (\r\n        <AppContext.Provider value={[appState,setAppState]}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },  \r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign:'left',\r\n    fontSize:'1.25rem',\r\n    [theme.breakpoints.down('xs')]: {\r\n      textAlign:'center'\r\n    },\r\n    color:\"rgba(255, 255, 255, 1)!important\"\r\n  },\r\n  transparent:{\r\n    background:\"transparent\",\r\n    boxShadow:\"none\"\r\n  },\r\n  headerButton:{\r\n    [theme.breakpoints.down('xs')]: {\r\n      display:'none'\r\n    },\r\n    color:\"rgba(255, 255, 255, 0.8)!important\"\r\n  }\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.transparent}>\r\n        <Toolbar>      \r\n          <p className={classes.title}>\r\n            <strong>Pratyay</strong><span style={{fontWeight:'lighter'}}>Bandyopadhyay</span>\r\n          </p>\r\n          <Button className={classes.headerButton}>Projects</Button>\r\n          <Button className={classes.headerButton}>Technologies</Button>\r\n          <Button className={classes.headerButton}>About me</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nconst AboutMeTab = () =>{\r\n\r\n    return (\r\n        <div>\r\n            AboutMeTab\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutMeTab;","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Button, CardHeader,Paper, CardMedia, CardContent, CardActions, Typography, Link,IconButton } from '@material-ui/core';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport Proptypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    height: 400,\r\n    '&:hover': {\r\n      boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.3),0px 4px 5px 0px rgba(0,0,0,0.24),0px 1px 10px 0px rgba(0,0,0,0.22)',\r\n      transform:'scale(1.01)',\r\n      cursor:'default'\r\n    },    \r\n    transition: \"all 0.25s ease-out\"\r\n  },\r\n  media: {\r\n    height: 180\r\n  },\r\n  content:{\r\n    height:50\r\n  },\r\n  description:{\r\n    transition: \"all 0.10s ease-out\",\r\n    padding:\"15px 16px 0px 16px\",\r\n    margin:\"-15px -16px 0px -16px\",    \r\n    borderRadius:\"0px\"\r\n  },\r\n  expandedDescription:{\r\n    margin:\"-70px -16px 0px -16px\"\r\n  }\r\n}));\r\nfunction getTrimmedDescription(str) {\r\n  if (str && str.length > 85) {\r\n    return str.substr(0, 82) + \"...\";\r\n  }\r\n  return str;\r\n}\r\nconst openLink = (url, sameTab) => {\r\n  if(url)\r\n    sameTab ? window.location = url : window.open(url, \"_blank\");\r\n}\r\nfunction ProjectCard(props) {\r\n  const classes = useStyles();\r\n  const [isDescExpanded, setIsDescExpanded] = useState(false);\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        title={props.title}\r\n        subheader={props.subtitle}\r\n        action={props.demoDisabled ? null :\r\n          <IconButton aria-label=\"settings\">\r\n            <LaunchIcon onClick={()=>openLink(props.demoLink)}/>\r\n          </IconButton>\r\n        }\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={props.img}\r\n        title={props.title}\r\n      />\r\n      <CardContent className={classes.content}>\r\n      <Paper elevation={0} className={clsx(classes.description, {[classes.expandedDescription]: isDescExpanded})}>\r\n        {isDescExpanded ?        \r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {props.description}\r\n          </Typography>:\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {getTrimmedDescription(props.description)}\r\n          </Typography>}\r\n          </Paper>\r\n        {props.description && props.description.length > 90 ?\r\n          <Link component=\"button\" color=\"secondary\" onClick={() => { setIsDescExpanded(!isDescExpanded) }}>\r\n            {isDescExpanded ? \"See less..\" : \"See more..\"}\r\n          </Link> : null}\r\n\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        {props.sourceDisabled ? null : <Button startIcon={<GitHubIcon />} onClick={()=>openLink(props.sourceLink)}>View Source</Button>}\r\n        {props.demoDisabled ? null : <Button startIcon={<ComputerIcon />} onClick={()=>openLink(props.demoLink)}>Live Demo</Button>}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nProjectCard.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  subtitle: Proptypes.string,\r\n  description: Proptypes.string,\r\n  sourceDisabled: Proptypes.bool,\r\n  demoDisabled: Proptypes.bool\r\n}\r\n\r\nexport default ProjectCard;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ProjectCards from './Projects/ProjectCards';\r\nimport ProjectsData from '../../../Data/Projects.json';\r\nconst ProjectTab = () => {\r\n    return (\r\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n            {ProjectsData ? ProjectsData.data.map((item, index) => (\r\n                <Grid item key={index}>\r\n                    <ProjectCards {...item}></ProjectCards>                    \r\n                </Grid>\r\n            )) : null}            \r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\nexport default ProjectTab;","import React from 'react';\r\n\r\nconst TechnologiesTab = () =>{\r\n\r\n    return (\r\n        <div>\r\n            TechnologiesTab\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TechnologiesTab;","import React from 'react';\r\nimport { Tab, Box, Tabs, Paper, Grid } from '@material-ui/core';\r\nimport AboutMeTab from './AboutMeTab/AboutMeTab';\r\nimport ProjectsTab from './ProjectsTab/ProjectsTab';\r\nimport TechnologiesTab from './TechnologiesTab/TechnologiesTab';\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <Box p={2}>\r\n        {props.children}\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function DisabledTabs() {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container justify=\"center\" alignItems=\"center\" >\r\n        <Paper square >\r\n          <Tabs\r\n            value={value}\r\n            indicatorColor=\"secondary\"\r\n            onChange={handleChange}\r\n            aria-label=\"page tabs\"\r\n            centered\r\n          >\r\n            <Tab label=\"Projects\" />\r\n            <Tab label=\"Technologies\" />\r\n            <Tab label=\"About Me\" />\r\n          </Tabs>\r\n        </Paper>\r\n      </Grid>\r\n      <TabPanel value={value} index={0}>\r\n        <ProjectsTab></ProjectsTab>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <TechnologiesTab></TechnologiesTab>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <AboutMeTab></AboutMeTab>\r\n      </TabPanel>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Header from '../HeaderNav/HeaderNav';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { background } from '../../Assets';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Tabs from '../Tabs/Tabs';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    headerNav: {\r\n        backgroundImage: `linear-gradient(rgba(0,0,0,.8),rgba(0,0,0,.4)),url(${background})`,\r\n        backgroundSize: \"cover\",\r\n        height: \"450px\",\r\n        borderTop: \"8px solid #fc9d03\",\r\n        textAlign: \"center\"\r\n    },\r\n    location: {\r\n        textTransform: \"none\",\r\n        fontSize: \"1.25rem\",\r\n        color: \"rgba(255, 255, 255, 1)!important\",\r\n        fontWeight: \"lighter\"\r\n    },\r\n    socialButton: {        \r\n        textAlign: 'center',\r\n        color:'rgba(255, 255, 255, 1)',       \r\n        '&:hover': {\r\n            transform:'scale(1.25)',\r\n            cursor:'pointer'\r\n        },\r\n        transition:'all 300ms'\r\n    },\r\n    socialContainer:{\r\n        padding:\"5rem 2rem 2rem 2rem\" \r\n    },\r\n    tabContainer:{\r\n        marginTop:'-1.5rem'\r\n    }\r\n}));\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n        <div className={classes.headerNav}>\r\n            <Header></Header>\r\n            <Grid style={{ textAlign: \"center\", marginTop: 75,color:'rgba(255,255,255,1)' }}>\r\n                <Typography variant=\"h4\"><strong>Full Stack Software Engineer</strong></Typography>\r\n            </Grid>\r\n\r\n            <Button size=\"large\" className={classes.location} disabled>\r\n                <LocationOnIcon></LocationOnIcon>\r\n                    India\r\n            </Button>\r\n            <Grid container justify=\"center\" alignItems=\"center\" className={classes.socialContainer} spacing={1}>\r\n                <Grid item xs={3} sm={2} container justify=\"center\" alignItems=\"center\">\r\n                    <div className={classes.socialButton}>\r\n                        <LinkedInIcon></LinkedInIcon>\r\n                        <Typography>LinkedIn</Typography>\r\n                    </div>                                      \r\n                </Grid>\r\n                <Grid item xs={3} sm={2} container justify=\"center\" alignItems=\"center\">\r\n                    <div className={classes.socialButton}>\r\n                        <GitHubIcon></GitHubIcon>\r\n                        <Typography>GitHub</Typography>\r\n                    </div>                                      \r\n                </Grid>\r\n                <Grid item xs={3} sm={2} container justify=\"center\" alignItems=\"center\">\r\n                    <div className={classes.socialButton}>\r\n                        <MailIcon></MailIcon>\r\n                        <Typography>Mail</Typography>\r\n                    </div>                                      \r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        <Grid className={classes.tabContainer}>\r\n            <Tabs></Tabs>\r\n        </Grid>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;","import { createMuiTheme } from '@material-ui/core/styles';\r\nexport const themeColors =\r\n{\r\n  light: { primary: \"#FFFFFF\", secondary: '#fc9d03' },\r\n  dark: { primary: \"#333\", secondary: '#fc9d03' }\r\n};\r\nconst themeHelper = (theme) => {\r\n  if (theme === \"light\") {\r\n    return createMuiTheme({\r\n      palette: {\r\n        primary: {\r\n          main: themeColors.light.primary\r\n        },\r\n        secondary: {\r\n          main: themeColors.light.secondary\r\n        },\r\n        type: \"light\"\r\n      }\r\n    });\r\n  } else {\r\n    return createMuiTheme({\r\n      palette: {\r\n        primary: {\r\n          main: themeColors.dark.primary\r\n        },\r\n        secondary: {\r\n          main:  themeColors.dark.secondary\r\n        },\r\n        type: \"dark\"\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default themeHelper;","import React, { useContext,useEffect } from 'react';\r\nimport { Home } from '../index';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport ThemeHelper , {themeColors} from '../../Theme/ThemeHelper';\r\nimport { AppContext } from '../../Context/AppContext';\r\n\r\nfunction AppShell() {\r\n    const [appState] = useContext(AppContext); \r\n    useEffect(()=>{\r\n        document.body.style.backgroundColor = themeColors[appState.theme].primary        \r\n    },[appState.theme]);   \r\n    return (\r\n        <ThemeProvider theme={ThemeHelper(appState.theme)}>\r\n            <Home></Home>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default AppShell;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { AppContextProvider } from './Context/AppContext';\r\nimport { AppShell } from './Components';\r\nfunction App() {\r\n  return (\r\n    <AppContextProvider>\r\n      <AppShell></AppShell>\r\n    </AppContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}